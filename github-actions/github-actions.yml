name: Validate & Deploy
on:
  #schedule:
  #  - cron: '30 5 * * *'
  push:
  #  branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]
  workflow_dispatch:
    inputs:
      target:
        description: 'Version to deploy'
        required: true
        default: 'latest'
        type: string

jobs: 
  validate:
    runs-on: your-server
    defaults:
          run:
            shell: cmd    
    strategy:
      matrix:
        database: [ProdA, ProdB]

    steps:
      - uses: actions/checkout@v3

      - name: Flyway Clean
        run: C:\flyway-9.1.3\flyway clean 
                -url=jdbc:sqlserver://DEV-MSSQL-01;encrypt=false;databaseName=${{ matrix.database }}_Build; 
                -user=temp 
                -password=<enterpassword>   
                -licenseKey=${{ secrets.FLYWAY_LICENSE_KEY }}
                -cleanDisabled="false"
        working-directory: ./${{ matrix.database }}/

      - name: Flyway Migrate
        run: C:\flyway-9.1.3\flyway migrate 
                -url=jdbc:sqlserver://DEV-MSSQL-01;encrypt=false;databaseName=${{ matrix.database }}_Build; 
                -user=temp 
                -password=<enterpassword>   
                -licenseKey=${{ secrets.FLYWAY_LICENSE_KEY }}
        working-directory: ./${{ matrix.database }}/
        
                #-target=${{ github.event.inputs.target }}

      - name: Flyway Undo
        run: C:\flyway-9.1.3\flyway undo
                -url=jdbc:sqlserver://DEV-MSSQL-01;encrypt=false;databaseName=${{ matrix.database }}_Build; 
                -user=temp 
                -password=<enterpassword>   
                -licenseKey=${{ secrets.FLYWAY_LICENSE_KEY }}
        working-directory: ./${{ matrix.database }}/

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.database }}
          path: ./${{ matrix.database }}/
  
  development:
    runs-on: ito-devops-01
    needs: validate
    defaults:
          run:
            shell: cmd    
    strategy:
      matrix:
        database: [ProdA, ProdB]

    steps:  
    - uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.database }}

    - name: Flyway Migrate
      run: C:\flyway-9.1.3\flyway migrate 
              -url=jdbc:sqlserver://DEV-MSSQL-01;encrypt=false;databaseName=${{ matrix.database }}; 
              -user=temp 
              -password=<enterpassword>   
              -baselineOnMigrate=true
              -licenseKey=${{ secrets.FLYWAY_LICENSE_KEY }}
              -placeholders.environment=development
      working-directory: ./${{ matrix.database }}/
      
  integration:
    runs-on: ito-devops-01
    needs: development
    defaults:
          run:
            shell: cmd    
    strategy:
      matrix:
        database: [ProdA, ProdB]

    steps:  
    - uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.database }}

    - name: Flyway Migrate
      run: C:\flyway-9.1.3\flyway migrate 
              -url=jdbc:sqlserver://INT-MSSQL;encrypt=false;databaseName=${{ matrix.database }}; 
              -user=temp 
              -password=<enterpassword>   
              -baselineOnMigrate=true
              -licenseKey=${{ secrets.FLYWAY_LICENSE_KEY }}
              -placeholders.environment=integration
      working-directory: ./${{ matrix.database }}/

  staging:
    runs-on: ito-devops-01
    needs: development
    defaults:
          run:
            shell: cmd    
    strategy:
      matrix:
        database: [ProdA, ProdB]

    steps:  
    - uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.database }}

    - name: Flyway Migrate
      run: C:\flyway-9.1.3\flyway migrate 
              -url=jdbc:sqlserver://STAGE-MSSQL-01;encrypt=false;databaseName=${{ matrix.database }}; 
              -user=temp 
              -password=<enterpassword>   
              -baselineOnMigrate=true
              -licenseKey=${{ secrets.FLYWAY_LICENSE_KEY }}
              -placeholders.environment=staging
      working-directory: ./${{ matrix.database }}/
