parameters:
- name: stage
  default: stage
- name: displayName
  default: Deploy
- name: dependsOn
  default: ''
- name: pauseForCodeReview
  default: false
- name: failReleaseIfDriftDetected
  default: false
- name: staticCodeAnalysis
  default: false
- name: staticCodeAnalysisOnly
  default: false
- name: generateReport                              #This is the primary flag to turn off reports. TODO: Sanitize number of variables used here.
  default: true
- name: targetCredentials
  default: ''
- name: pipelineParameters
  default: ''
- name: agentPool
  default: 'default'
- name: notificationsGroup
  default: ''                                       #[Microsoft]\Pipeline Developers 
                                                    #syntax discussions here: https://github.com/MicrosoftDocs/azure-devops-docs/issues/13320, https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/manual-validation-v0?view=azure-pipelines

stages:
  - stage: ${{parameters.stage}} 
    pool: $(AGENT_POOL)                             # ${{parameters.agentPool}} if wish to parameterize and pass in
    displayName: ${{parameters.displayName}} 
    dependsOn: ${{parameters.dependsOn}} 
    jobs:

    - ${{if and(eq( parameters.generateReport, true), eq(parameters.staticCodeAnalysisOnly, true))}}:
      - job: ChangeReport
        displayName: Change Report With Code Analysis
        variables:
        - group: ${{parameters.targetCredentials}}
        - group: ${{parameters.pipelineParameters}}
        - group: redgate_global_vars
        steps:
          # https://github.com/microsoft/azure-pipelines-yaml/blob/master/design/checkout-path.md#control-the-checkout-location-of-code
          - checkout: templates
          - checkout: self
            name: source
          
          - script: '$(FLYWAY) info check -code -environment="target" -environments.target.url="$(target_database_JDBC)" -environments.target.user="$(user)" -environments.target.password="$(password)" -check.rulesLocation="$(Build.SourcesDirectory)\templates\rules" -reportFilename="$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-$(DRIFT_AND_CHANGE_REPORT)"  -locations="filesystem:$(WORKING_DIRECTORY)\$(Build.Repository.Name)\migrations"'
            continueOnError: false
            workingDirectory: '$(WORKING_DIRECTORY)\$(Build.Repository.Name)'
            displayName: '$(DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME)'
            env:
              FLYWAY_CLEAN_DISABLED: false
          
          - task: PublishBuildArtifacts@1
            displayName: 'Publish $(DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME)'
            condition: always()
            inputs:
              ArtifactName: '$(DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME)'
              PathtoPublish: '$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-$(DRIFT_AND_CHANGE_REPORT)'

    - ${{if and(eq(parameters.staticCodeAnalysis, true), eq( parameters.generateReport, true), eq(parameters.staticCodeAnalysisOnly, false))}}:
      - job: ChangeReport
        displayName: Change Report With Code Analysis
        variables:
        - group: ${{parameters.targetCredentials}}
        - group: ${{parameters.pipelineParameters}}
        - group: redgate_global_vars
        steps:
          # https://github.com/microsoft/azure-pipelines-yaml/blob/master/design/checkout-path.md#control-the-checkout-location-of-code
          - checkout: templates
          - checkout: self
            name: source
          
          - script: '$(FLYWAY) info check -dryrun -drift -changes -code -environment="target" -environments.target.url="$(target_database_JDBC)" -environments.target.user="$(user)" -environments.target.password="$(password)" -environments.check.url="$(check_JDBC)" -environments.check.user="$(check_userName)" -environments.check.password="$(check_password)" -check.buildEnvironment="check" -check.rulesLocation="$(Build.SourcesDirectory)\templates\rules" -check.failOnDrift="${{parameters.failReleaseIfDriftDetected}}" -reportFilename="$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-$(DRIFT_AND_CHANGE_REPORT)"  -locations="filesystem:$(WORKING_DIRECTORY)\$(Build.Repository.Name)\migrations"'
            continueOnError: false
            workingDirectory: '$(WORKING_DIRECTORY)\$(Build.Repository.Name)'
            displayName: '$(DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME)'
            env:
              FLYWAY_CLEAN_DISABLED: false
          
          - task: PublishBuildArtifacts@1
            displayName: 'Publish $(DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME)'
            condition: always()
            inputs:
              ArtifactName: '$(DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME)'
              PathtoPublish: '$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-$(DRIFT_AND_CHANGE_REPORT)'

    - ${{if and(eq( parameters.staticCodeAnalysis, false), eq( parameters.generateReport, true), eq(parameters.staticCodeAnalysisOnly, false))}}:
      - job: ChangeReport
        displayName: Change Report
        variables:
        - group: ${{parameters.targetCredentials}}
        - group: ${{parameters.pipelineParameters}}
        - group: redgate_global_vars
        steps:

          - script: '$(FLYWAY) info check -dryrun -drift -changes -environment="target" -environments.target.url="$(target_database_JDBC)" -environments.check.url="$(check_JDBC)" -environments.check.user="$(check_userName)" -environments.check.password="$(check_password)" -check.buildEnvironment="check" -check.rulesLocation="$(Build.SourcesDirectory)\templates\rules" -check.failOnDrift="${{parameters.failReleaseIfDriftDetected}}" -reportFilename="$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-$(DRIFT_AND_CHANGE_REPORT)"  -locations="filesystem:$(WORKING_DIRECTORY)\$(Build.Repository.Name)\migrations"'
            workingDirectory: '$(WORKING_DIRECTORY)'
            continueOnError: false
            displayName: '$(DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME)'
            env:
              FLYWAY_CLEAN_DISABLED: false
          
          - task: PublishBuildArtifacts@1
            displayName: 'Publish $(DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME)'
            condition: always()
            inputs:
              ArtifactName: '$(DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME)'
              PathtoPublish: '$(System.ArtifactsDirectory)\$(databaseName)-$(Build.BuildId)-$(DRIFT_AND_CHANGE_REPORT)'
    
    - ${{if eq(parameters.generateReport, false)}}:
      - job: ChangeReport
        displayName: Change Report
        variables:
        - group: ${{parameters.targetCredentials}}
        - group: ${{parameters.pipelineParameters}}
        - group: redgate_global_vars
        steps:
          - powershell: |
              Write-Host "##[warning]For reporting documentation see here: https://documentation.red-gate.com/fd/check-224919699.html"
            workingDirectory: '$(WORKING_DIRECTORY)'
            continueOnError: true
            displayName: 'No Reports Generated'

          # - bash: |
          #     echo "##[warning]For reporting documentation see here: https://documentation.red-gate.com/fd/check-224919699.html"
          #   workingDirectory: '$(WORKING_DIRECTORY)'
          #   continueOnError: true
          #   displayName: 'No Reports Generated'

    - ${{if eq(parameters.pauseForCodeReview, true)}}:
      - job: CodeReview
        displayName: Code Review
        dependsOn: 'ChangeReport'
        pool: server
        steps:
          - task: ManualValidation@0
            displayName: 'Review Change Report Prior To Release'
            timeoutInMinutes: 4320 # job times out in 1 hour
            inputs:
              notifyUsers: ${{parameters.notificationsGroup}}
              instructions: 'Review changes'
    
    - ${{if eq(parameters.pauseForCodeReview, false)}}:
      - job: CodeReview
        pool: server
        displayName: Skipping Code Review
        dependsOn: 'ChangeReport'
    
    - job: Deploy
      displayName: Deployment
      dependsOn: 'CodeReview'
      variables:
      - group: ${{parameters.targetCredentials}}
      - group: ${{parameters.pipelineParameters}}
      - group: redgate_global_vars
      steps:

        - script: '$(FLYWAY) info repair migrate -outOfOrder=true info -url="$(target_database_JDBC)" -locations="filesystem:$(WORKING_DIRECTORY)\migrations"'
          workingDirectory: $(WORKING_DIRECTORY)
          displayName: ${{parameters.displayName}}
          continueOnError: false
          env:
            FLYWAY_CLEAN_DISABLED: true # clean drops a target DB schema, keep disabled except for build step