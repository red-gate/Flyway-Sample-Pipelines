name: hotfix-pipeline

# This pipeline is intended to execute as quickly as possible. There are no manual interventions by default,
# no artifacts are generated to review unless pauseForCodeReview is set to true.
# Use only when needed.

trigger: none

parameters:

  - name: cherryPickVersions
    displayName: 'Scripts To Undo: Comma Separated List Of Full Version Numbers'
    default: ''
    type: string
  
  # This is the extensible definition of your target environments. 
  # Every parameter in deploymentStages corresponds to an environment - here it's Test and Prod.
  # Pay attention to the 'dependsOn' field - this determines order of operations.
  - name: deploymentStages
    type: object
    default: 
    
    - stage: 'Test'
      displayName: 'Hotfix Test'
      pauseForCodeReview: false
      variableGroupName: 'rg_test_credentials_variable_group' 
    
    - stage: 'Prod'
      dependsOn: 'Test'
      displayName: 'Hotfix Prod'
      pauseForCodeReview: false
      variableGroupName: 'rg_prod_credentials_variable_group'  

variables:

  # This is the relative path to the migrations folder in your project, such as:
  # $(System.DefaultWorkingDirectory)\project
  # The default is to have the migrations folder in the same directory as the yml file
  WORKING_DIRECTORY: $(System.DefaultWorkingDirectory)

  FLYWAY: 'flyway -user="$(userName)" "-plugins.clean.mode=default" -schemas="$(schemas)" -password="$(password)" -licenseKey=$(FLYWAY_LICENSE_KEY) -configFiles="$(WORKING_DIRECTORY)\flyway.conf" -locations="filesystem:$(WORKING_DIRECTORY)\migrations"'

  BUILD_NAME: 'Build'
  RELEASE_PREVIEW: 'Release-Preview.sql'
  DRIFT_AND_CHANGE_REPORT: 'Drift-And-Change-Report.html'
  DRIFT_AND_CHANGE_REPORT_DISPLAY_NAME: 'Drift And Change Report'
  
  group: rg_flyway_vars
  cherryPickVersions: ${{parameters.cherryPickVersions}}

stages:
  
  - ${{each stage in parameters.deploymentStages}}:
    
    - stage: ${{stage.stage}} 
      pool: $(AGENT_POOL)
      displayName: ${{stage.displayName}} 
      jobs:
      
      - ${{if eq(stage.pauseForCodeReview, true)}}:
        - job: PreRelease
          displayName: Release Preview
          variables:
          - group: ${{stage.variableGroupName}}
          - group: rg_flyway_vars
          steps:

            - script: '$(FLYWAY) migrate -cherryPick="$(cherryPickVersions)" -outOfOrder=true -dryRunOutput="$(System.ArtifactsDirectory)\${{stage.stage}}-$(RELEASE_PREVIEW)" -url="$(target_database_JDBC)" -baselineOnMigrate=true -baselineVersion=$(BASELINE_VERSION)'
              failOnStderr: true
              displayName: 'Pre-Release Deployment Report'
              env:
                FLYWAY_CLEAN_DISABLED: true

            - task: PublishBuildArtifacts@1
              displayName: 'Publish Release Preview'
              inputs:
                ArtifactName: 'Release Preview'
                PathtoPublish: '$(System.ArtifactsDirectory)\${{stage.stage}}-$(RELEASE_PREVIEW)'
      
        - job: CodeReview
          displayName: Code Review
          dependsOn: 'PreRelease'
          pool: server
          steps:
            - task: ManualValidation@0
              displayName: 'Review Change Report Prior To Release'
              timeoutInMinutes: 4320 # job times out in 3 days
              inputs:
                notifyUsers: |
                  user@email.com
                  example@example.com
                instructions: 'Review changes'

        - job: Deploy
          displayName: Deployment
          dependsOn: 'CodeReview'
          variables:
          - group: ${{stage.variableGroupName}}
          - group: rg_flyway_vars
          steps:

            - script: '$(FLYWAY) info migrate -cherryPick="$(cherryPickVersions)" -outOfOrder=true info -url="$(target_database_JDBC)" -baselineOnMigrate=true -baselineVersion=$(BASELINE_VERSION)'
              displayName: ${{stage.displayName}}
              failOnStderr: true
              env:
                FLYWAY_CLEAN_DISABLED: true # clean destroys a target DB, keep disabled except for build step
      
      - ${{if ne(stage.pauseForCodeReview, true)}}:
        - job: Deploy
          displayName: Deployment
          variables:
          - group: ${{stage.variableGroupName}}
          - group: rg_flyway_vars
          steps:

            - script: '$(FLYWAY) info migrate -cherryPick="$(cherryPickVersions)" -outOfOrder=true info -url="$(target_database_JDBC)" -baselineOnMigrate=true -baselineVersion=$(BASELINE_VERSION)'
              displayName: ${{stage.displayName}}
              failOnStderr: true
              env:
                FLYWAY_CLEAN_DISABLED: true # clean destroys a target DB, keep disabled except for build step